var linuxUpdater = require('../../lib/LinuxUpdater'),
    _ = require('lodash'),
    { expect } = require('chai'),
    sinon = require('sinon');

describe('LinuxUpdater', function () {
    let LinuxUpdater,
        sandbox,
        updaterOptions = {
            adapter:
            {
                getAppName: _.noop,
                getAppInstallationPath: _.noop,
                getAutoUpdater: _.noop,
                getLogger: function () {
                    return {
                        error: _.noop,
                        info: _.noop,
                        warn: _.noop
                    };
                }
            },
            autoUpdater: {
                on: _.noop,
                downloadUpdate: _.noop
            }
        };

    before(function () {
        LinuxUpdater = new linuxUpdater(updaterOptions);
        sandbox = sinon.sandbox.create();
    });

    after(function () {
        sandbox.restore();
    });

    describe('downloadUpdate', function () {
        let downloadUpdateSpy;

        before(function () {
            downloadUpdateSpy = sandbox.spy(LinuxUpdater, 'downloadUpdate');
        });

        it('should have updateInfo as an argument', () => {
            let error = null,
                updateInfo = {
                    additionalParamsString: 'installationId',
                    appId: '7d7c3dea-961e-4b19-b5d7-2106d03a152e',
                    arch: '64',
                    channel: 'beta',
                    downloadURL: 'https://dl.pstmn.io/download/version/6.7.0/osx_64',
                    platform: 'OSX',
                    updateServerDomain: 'https://dl.pstmn.io/',
                    userAgent: 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_2)',
                    userId: '0',
                    version: '6.7.0'
                };

            try {
                LinuxUpdater.downloadUpdate(updateInfo);
            }
            catch (e) {
                error = e;
            }
            finally {
                expect(error).to.be.equal(null);
                expect(downloadUpdateSpy.calledWith(updateInfo));
                expect(downloadUpdateSpy.called).to.equal(true);
                expect(updateInfo).to.have.property('additionalParamsString', updateInfo.additionalParamsString);
                expect(updateInfo).to.have.property('appId', updateInfo.appId);
                expect(updateInfo).to.have.property('arch', updateInfo.arch);
                expect(updateInfo).to.have.property('channel', updateInfo.channel);
                expect(updateInfo).to.have.property('downloadURL', updateInfo.downloadURL);
                expect(updateInfo).to.have.property('platform', updateInfo.platform);
                expect(updateInfo).to.have.property('updateServerDomain', updateInfo.updateServerDomain);
                expect(updateInfo).to.have.property('userAgent', updateInfo.userAgent);
                expect(updateInfo).to.have.property('userId', updateInfo.userId);
                expect(updateInfo).to.have.property('version', updateInfo.version);

            }
        });
    });
});
