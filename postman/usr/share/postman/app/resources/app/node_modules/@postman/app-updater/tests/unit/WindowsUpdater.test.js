var windowsUpdater = require('../../lib/WindowsUpdater'),
    _ = require('lodash'),
    child_process = require('child_process'), // eslint-disable-line security/detect-child-process
    { expect } = require('chai'),
    sinon = require('sinon');

describe('WindowsUpdater', function () {
    let WindowsUpdater,
        sandbox,
        updaterOptions = {
            autoUpdater: {
                on: _.noop
            },
            adapter: {
                getLogger: function () {
                    return {
                        error: _.noop,
                        info: _.noop,
                        warn: _.noop
                    };
                },
                quitApp: _.noop
            }
        };

    before(function () {
        WindowsUpdater = new windowsUpdater(updaterOptions);
        sandbox = sinon.sandbox.create();
    });

    after(function () {
        sandbox.restore();
    });

    describe('run', function () {
        let spawnSpy;

        beforeEach(function () {
            spawnSpy = sandbox.spy(child_process, 'spawn');
        });

        afterEach(function () {
            spawnSpy.restore();
        });

        it('should throw error if args is not a Array<string>', () => {
            let args = 123,
                done = updaterOptions.adapter.quitApp;

            try {
                WindowsUpdater.run(args, done);
            }
            catch (e) {
                expect(e).to.be.instanceOf(Error);
                expect(spawnSpy.callCount).to.equal(1);
            }
        });
    });
});
